package com.barracuda.tasks.politeh.labs.j120.lab03.src;

import com.barracuda.tasks.politeh.labs.j120.lab03.src.std.ConverterException;

/**
 * Интерфейс определяет методы конвертации файлов из
 * двоичного вида в текстовый и обратно. Конвертируемые
 * файлы могут содержать:
 * - обычный текст;
 * - числа в интегральном формате;
 * - числа в вещественном формате
 *
 * @author (C)Y.D.Zakovryashin, 19.01.2019
 */

public interface IFileConverter {
    /**
     * Метод преобразует текстовый файл в двоичное
     * представление. Метод реализует следующий алгоритм:
     * - обычный текст преобразуется в байтовое представление с
     * использованием заданной кодировки charSet;
     * - текстовое представление чисел в интегральном и
     * вещественном формате преобразуется в двоичном
     * представлении.
     *
     * @param inputFileName имя исходного файла данных в
     * текстовом формате.
     * @param outputFileName имя выходного файла с данными в
     * двоичном формате.
     * Если файл с таким именем уже существует, то он
     * перезаписывается данным методом.
     * @param charSet используемая кодировка текста.
     * @return строку с именем выходного файла, если конвертация
     * завершена корректно, или сообщение с описанием исключения,
     * возникшего в ходе выполнения конвертации.
     */
    String toBinary(String inputFileName, String outputFileName,
                    String charSet);

    /**
     * Метод преобразует двоичные данные исходного файла в их
     * текстовое представление. Метод реализует следующий
     * алгоритм:
     * 1. обычный текст преобразуется в строки с использованием
     * заданной кодировки charSet;
     * 2. числовые данные в интегральном или вещественном
     * формате преобразуется в их десятичное представление.
     * @param inputFileName имя исходного файла данных в
     * двоичном формате.
     * @param outputFileName имя выходного файла с данными в
     * текстовом формате.
     * Если файл с таким именем уже существует, то он
     * перезаписывается данным методом.
     * @param charSet используемая кодировка текста.
     * @return строку с именем выходного файла, если конвертация
     * завершена корректно, или сообщение с описанием исключения,
     * возникшего в ходе выполнения конвертации.
     */
    String toText(String inputFileName, String outputFileName,
                  String charSet);


    /**
     * Метод подсчитывает и возвращает сумму всех чисел, которые
     * встречаются в тексте файла. Внимание! Метод работает
     * только с текстовыми файлами.
     * @param fileName имя исходного файла с данными.
     * @return подсчитанную сумму чисел.
     * //@throws ConverterException данное исключение
     * выбрасывается в случае,
     * если:
     * - имя файла fileName равно null;
     * - файл fileName не содержит данных.
     */
    double getSum(String fileName) throws ConverterException;
}
